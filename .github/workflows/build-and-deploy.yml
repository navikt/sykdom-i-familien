# This workflow trigger on push to any branch
name: CI / CD
on:
    push:
        paths-ignore:
            - '**.md'
            - '.gitignore'
            - 'LICENCE'
            - 'CODEOWNERS'
        branches:
    repository_dispatch:
        types: [publish-dev-gcp, publish-prod-sbs]

env:
    BASE_IMAGE: docker.pkg.github.com/${{ github.repository }}/sykdom-i-familien
    GITHUB_USERNAME: x-access-token
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    DATASET: production

jobs:
    test:
        name: Test Code
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                node-version: [12.x]
        steps:
            #- run: echo "${{toJSON(github.event)}}" # Debugs github event.
            - uses: actions/checkout@v1
            - name: Cache NPM dependencies
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-npm-cache-
                      - name: Use Node.js ${{ matrix.node-version }}
                        uses: actions/setup-node@v1
                        with:
                            node-version: ${{ matrix.node-version }}
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: npm install, build, and test
              run: |
                  npm ci
                  npm run test

    set-image:
        name: 'Set image'
        needs: test
        runs-on: ubuntu-20.04
        outputs:
            image: ${{ steps.output-image.outputs.image }}
        steps:
            - id: checkout-code
              uses: actions/checkout@v1
            - id: set-image
              run: echo "TAG=$(date "+%Y.%m.%d.%H.%M")-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            - id: output-image
              run: echo "::set-output name=image::$BASE_IMAGE:$TAG"
            - id: debug
              run: |
                  echo "output image=$BASE_IMAGE:$TAG"

    build-code-and-push-docker-preview:
        name: Build code and push docker preview image
        if: startsWith(github.ref, 'refs/heads/preview-') || github.event.action == 'publish-dev-gcp' # Build and push docker if branch is either master or dev-*
        needs: set-image
        runs-on: ubuntu-20.04
        env:
            IMAGE: ${{ needs.set-image.outputs.image }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v1
            - name: Cache NPM dependencies
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-npm-cache-
                      - name: Use Node.js ${{ matrix.node-version }}
                        uses: actions/setup-node@v1
                        with:
                            node-version: ${{ matrix.node-version }}
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: build code
              env:
                  SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
                  DATASET: production
                  ENV: dev
                  OVERLAY_DRAFTS: true
                  WATCH_MODE: false
                  GATSBY_PATH_PREFIX:
                  GATSBY_SITE_URL: https://www.nav.no
              run: |
                  echo "Exported DATASET=$DATASET"
                  npm i
                  npm run build-preview
            - name: Build Docker image
              run: |
                  docker build -t ${IMAGE} . -f Dockerfile-dev
            - name: Login to Github Package Registry
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
                  docker push ${IMAGE}

    deploy-dev-gcp:
        name: Deploy to dev-gcp
        if: github.event.action == 'publish-dev-gcp' || startsWith(github.ref, 'refs/heads/preview-') || startsWith(github.ref, 'refs/heads/master') # Build and push docker if branch is either master or dev-*
        needs: [build-code-and-push-docker-preview, set-image]
        env:
            IMAGE: ${{ needs.set-image.outputs.image }}
        runs-on: ubuntu-20.04
        steps:
            - uses: actions/checkout@v1
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-gcp
                  RESOURCE: nais/naiserator-dev.yml
                  VARS: nais/dev-gcp.json

    build-code-and-push-docker-prod:
        name: prod-build-push-docker
        if: github.event.action == 'publish-prod-sbs' # Build and push docker if publish production event from sanity studio
        needs: set-image
        runs-on: ubuntu-20.04
        env:
            IMAGE: ${{ needs.set-image.outputs.image }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v1
            - name: Cache NPM dependencies
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-npm-cache-
                      - name: Use Node.js ${{ matrix.node-version }}
                        uses: actions/setup-node@v1
                        with:
                            node-version: ${{ matrix.node-version }}
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: build code
              env:
                  SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
                  DATASET: production
                  ENV: prod
                  OVERLAY_DRAFTS: false
                  WATCH_MODE: false
                  GATSBY_PATH_PREFIX: /familie/sykdom-i-familien
                  GATSBY_SITE_URL: https://www.nav.no
              run: |
                  echo "Exported DATASET=$DATASET"
                  npm i
                  npm run build
            - name: Build Docker image
              run: |
                  docker build -t ${IMAGE} .
            - name: Login to Github Package Registry
              env:
                  DOCKER_USERNAME: x-access-token
                  DOCKER_PASSWORD: ${{ env.GITHUB_TOKEN }}
              run: |
                  echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
            - name: Push Docker image
              run: 'docker push ${IMAGE}'

    deploy-prod-sbs:
        name: deploy-prod-sbs
        needs: [build-code-and-push-docker-prod, set-image] # Depends on build-code-and-push-docker job
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout code
              uses: actions/checkout@v1
            - name: deploy to prod-sbs
              uses: nais/deploy/actions/deploy@v1
              env:
                  IMAGE: ${{ needs.set-image.outputs.image }}
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: prod-sbs
                  RESOURCE: nais/prod-sbs.yml
